schema_name: "Template"
purpose: "Define the HTML structure for rendering document data using Mustache"

template_engine: "Mustache (https://mustache.github.io/)"

mustache_syntax:
  variables:
    syntax: "{{field.name}}"
    description: "Interpolate a value"
    example: "{{sender.name}}"

  conditionals:
    syntax: "{{#field}}...{{/field}}"
    description: "Show section only if field exists/is truthy"
    example: |
      {{#sender.email}}
      <div>Email: {{sender.email}}</div>
      {{/sender.email}}

  inverted:
    syntax: "{{^field}}...{{/field}}"
    description: "Show section only if field is falsy/empty"
    example: |
      {{^items}}
      <p>No items</p>
      {{/items}}

  arrays:
    syntax: "{{#array}}...{{/array}}"
    description: "Iterate over array items"
    special_variable: "{{index}} - current item index (0-based)"
    example: |
      {{#items}}
      <div data-item-index="{{index}}">
        <span>{{description}}</span>
      </div>
      {{/items}}

  unescaped:
    syntax: "{{{variable}}}"
    description: "Render HTML without escaping (use carefully!)"
    use_case: "When field contains safe HTML content"

required_attributes:
  data_field:
    purpose: "Enable inline editing"
    required_on: "ALL user-editable content"
    format: "section.field or array.{{index}}.field"
    examples:
      - "<span data-field=\"sender.name\">{{sender.name}}</span>"
      - "<span data-field=\"items.{{index}}.description\">{{description}}</span>"

  data_item_index:
    purpose: "Identify array items for editing"
    required_on: "Container element of each array item"
    format: "{{index}}"
    example: "<div data-item-index=\"{{index}}\">...</div>"

  data_array_container:
    purpose: "Identify array containers for add/delete buttons"
    required_on: "Wrapper element around array iteration"
    format: "arrayFieldName"
    example: |
      <div data-array-container="items">
        {{#items}}
        <div data-item-index="{{index}}">...</div>
        {{/items}}
      </div>

  id_attribute:
    purpose: "Main container identification"
    required_on: "Root element"
    convention: "{typeId}-content"
    examples:
      - "<div id=\"invoice-content\">...</div>"
      - "<div id=\"cv-content\">...</div>"

  class_attribute:
    purpose: "Styling and scoping"
    required_on: "Root element"
    convention: "{typeId}-preview"
    examples:
      - "<div class=\"invoice-preview\">...</div>"
      - "<div class=\"cv-preview\">...</div>"

html_structure:
  semantic_elements:
    - "Use <header>, <main>, <section>, <article> appropriately"
    - "Use <h1>, <h2>, <h3> for headings hierarchy"
    - "Use <table> for tabular data"
    - "Use <ul>/<ol> for lists"

  accessibility:
    - "Include aria-labels where helpful"
    - "Use semantic HTML5 elements"
    - "Ensure proper heading hierarchy"

  organization:
    - "Group related fields in <div> containers"
    - "Use consistent class naming (.section-title, .content-box, etc.)"
    - "Keep nesting depth reasonable (max 5-6 levels)"

styling_integration:
  - "Use class names that match theme CSS"
  - "Avoid inline styles (use classes instead)"
  - "Reference CSS variables for dynamic values"
  - "Keep HTML clean and presentation-free"

array_handling:
  basic_array: |
    <div data-array-container="experiences">
      {{#experiences}}
      <div class="experience-item" data-item-index="{{index}}">
        <span data-field="experiences.{{index}}.company">{{company}}</span>
        <span data-field="experiences.{{index}}.position">{{position}}</span>
      </div>
      {{/experiences}}
    </div>

  table_array: |
    <table class="items-table">
      <thead>
        <tr>
          <th>Description</th>
          <th>Quantity</th>
          <th>Price</th>
        </tr>
      </thead>
      <tbody>
        {{#items}}
        <tr data-item-index="{{index}}">
          <td><span data-field="items.{{index}}.description">{{description}}</span></td>
          <td><span data-field="items.{{index}}.quantity">{{quantity}}</span></td>
          <td><span data-field="items.{{index}}.price">{{price}}</span></td>
        </tr>
        {{/items}}
      </tbody>
    </table>

  empty_state: |
    <div data-array-container="items">
      {{#items}}
      <div data-item-index="{{index}}">{{description}}</div>
      {{/items}}
      {{^items}}
      <p class="empty-state">No items yet</p>
      {{/items}}
    </div>

best_practices:
  - "Start with root container: <div class=\"{type}-preview\" id=\"{type}-content\">"
  - "Wrap ALL editable text in <span data-field=\"...\"> tags"
  - "Use {{#conditional}} for optional fields"
  - "Always include data-item-index and data-array-container for arrays"
  - "Keep template readable with proper indentation"
  - "Add HTML comments to clarify sections"
  - "Test with empty/missing data scenarios"

common_sections:
  header:
    purpose: "Title, document number, date"
    example: |
      <div class="document-header">
        <h1><span data-field="title">{{title}}</span></h1>
        <div class="meta">
          <span data-field="number">{{number}}</span> -
          <span data-field="date">{{date}}</span>
        </div>
      </div>

  two_column_info:
    purpose: "Sender/recipient, from/to"
    example: |
      <div class="info-grid">
        <div>
          <h2>From</h2>
          <div><span data-field="sender.name">{{sender.name}}</span></div>
        </div>
        <div>
          <h2>To</h2>
          <div><span data-field="client.name">{{client.name}}</span></div>
        </div>
      </div>

  summary_section:
    purpose: "Totals, calculations"
    example: |
      <div class="summary">
        <div class="row">
          <span>Subtotal:</span>
          <span>{{formatted.subtotal}}</span>
        </div>
        <div class="row total">
          <span>Total:</span>
          <span>{{formatted.total}}</span>
        </div>
      </div>

examples_reference:
  - path: "examples/templates/invoice-template.html"
    description: "Complete invoice template with table"

  - path: "examples/templates/cv-template.html"
    description: "CV template with multiple arrays"

  - path: "examples/templates/contract-template.html"
    description: "Contract template with clauses"
